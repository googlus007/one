1. Что такое .Net Framework и из чего он состоит?
   .NET Framework — программная технология от компании Microsoft, предназначенная для создания обычных программ и веб-приложений. Одной из основных идей Microsoft .NET является совместимость различных служб, написанных на разных языках. Например, служба, написанная на C++ для Microsoft .NET, может обратиться к методу класса из библиотеки, написанной на Delphi; на C# можно написать класс, наследованный от класса, написанного на Visual Basic .NET, а исключение, созданное методом, написанным на C#, может быть перехвачено и обработано в Delphi.
2. Поясните, что такое CLR-среда.
   Из c# кода при компилировании получается не бинарный код как например у с или pascal, а так называемый CIL код. CLR - это виртуальная машина котораяя этот код запускает. CLR - является компонентом пакета Microsoft .NET Framework.
3. Что такое FCL?
   Base Class Library, или так называемая .NET FCL (англ. Framework Class Library), сокращённо BCL — стандартная библиотека классов платформы «.NET Framework». Программы, написанные на любом из языков, поддерживающих платформу .NET, могут пользоваться классами и методами BCL — создавать объекты классов, вызывать их методы, наследовать необходимые классы BCL и т. д.
4. Какая наименьшая исполнимая единица в .NET?
5. Что такое IL?
   IL (Intermediate Language) - код, содержащий набор инструкций, не зависящих от платформы. Иными словами, после компиляции исходного кода он преобразуется не в код для какой-то определенной платформы, а в промежуточный код на языке IL.
6. Пояснить работу JIT-компилятора?
   JIT-компиляция (англ. Just-in-time compilation, компиляция «на лету»), динамическая компиляция (англ. dynamic translation) — технология увеличения производительности программных систем, использующих байт-код, путём компиляции байт-кода в машинный код или в другой формат непосредственно во время работы программы. Таким образом достигается высокая скорость выполнения по сравнению с интерпретируемым байт-кодом[1] (сравнивая с компилируемыми языками) за счёт увеличения потребления памяти (для хранения результатов компиляции) и затрат времени на компиляцию. JIT базируется на двух более ранних идеях, касающихся среды исполнения: компиляции байт-кода и динамической компиляции.
7. Что такое CTS ?
   Common Type System (сокр. CTS, рус. Общая система типов) — часть .NET Framework, формальная спецификация, определяющая, как какой-либо тип (класс, интерфейс, структура, встроенный тип данных) должен быть определён для его правильного выполнения средой .NET. Кроме того, данный стандарт определяет, как определения типов и специальные значения типов представлены в компьютерной памяти. Целью разработки CTS было обеспечение возможности программам, написанным на различных языках программирования, легко обмениваться информацией. Как это принято в языках программирования, тип может быть описан как определение набора допустимых значений (например, «все целые от 0 до 10») и допустимых операций над этими значениями (например, сложение и вычитание).
8. Какие аспекты поведения определяет  тип System.Object?
   Все остальные классы в .NET, даже те, которые мы сами создаем, а также базовые типы, такие как System.Int32, являются неявно производными от класса Object. Даже если мы не указываем класс Object в качестве базового, по умолчанию неявно класс Object все равно стоит на вершине иерархии наследования. Поэтому все типы и классы могут реализовать те методы, которые определены в классе System.Object.
9. Что находится в MSCorLib dll?
10.Что такое частные и общие сборки?
   Частные находятся в каталоге программы, а общие в GAC.
11.Что такое assembly manifest?
   Манифест сборки (assembly manifest) - это внутренняя часть сборки, которая позволяет ей быть самоописанной. Assembly manifest позволяет идентифицировать сборку, указывает файлы, которые включаются в реализацию сборки, описывает типы и ресурсы, используемые в сборке, указывает зависимости от других сборок, а также набор прав доступа, которые необходимы сборке для корректной работы. Эта информация используется во время выполнения для разрешения ссылок, проверку корректности версий, проверку целостности загруженных сборок.
12.Что такое GAC?
   GAC — это глобальный кэш сборок. В нем хранятся совместно используемые сборки. 
13. Чем managed code отличается от unmanaged code?
   В общем случае при написании С#-программы создается код, называемый управляемым (managed code). Управляемый код выполняется под управлением CLR-системы. У такого выполнения в результате есть как определенные ограничения, так и немалые достоинства. К числу ограничений относится необходимость иметь, во-первых, специальный компилятор, который должен создавать MSIL-файл, предназначенный для работы под управлением CLR-системы, и, во-вторых, этот компилятор должен использовать библиотеки среды .NET Framework. Достоинства же управляемого кода — современные методы управления памятью, возможность использовать различные языки, улучшенная безопасность, поддержка управления версиями и четкая организация взаимодействия программных компонентов.
А теперь затронем неуправляемый код (unmanaged code). Сразу замечу, в неуправляемом коде нет ничего страшного. Не стоит пугаться этого слова. Неуправляемый код - это обычный машинный код. Практически все программы написанные не на базе .NET используют неуправляемый код.
Кроме того, управляемый и неуправляемый код могут работать вместе, поэтому факт создания С#-компилятором управляемого кода отнюдь не ограничивает его возможность выполняться совместно с ранее созданными программами.
14. Как и для чего определен метод Main?
   Метод с именем Main является самым главным методом в программе на языке программирования c sharp (c#), потому что с него начинается выполнение приложения.
15. Варианты использования директивы using( using Directive ) в C#?
  Используется в двух случаях:разрешает использование типов в пространстве имен, поэтому уточнение использования типа в этом пространстве имен не требуется,.позволяет создавать псевдонимы пространства имен или типа. Это называется директива using alias.
16. Как связаны между собой сборки и пространства имен?
  Можно сказать что ни как. 1. Любая сборка может содержать любое количество пространств имен. 2. Любое пространство имен может быть "размазано" по любому числу сборок. 
17. Что такое примитивные типы данных?
   bool, byte, sbyte, short, ushort,  int, uint, long, ulong, float, double, decimal, char, string, object.
18. Что такое ссылочные типы?
   Тип object, Тип string, Классы (class), Интерфейсы (interface), Делегаты (delegate).
19. Какие типы относятся к типам-значениям?
20.  В чем отличие между ссылочными и значимыми типами данных?
   Значимые типы хранят значение, а ссылочные - ссылку на значение.
21. Что такое упаковка и распаковка значимых типов?
   Упаковка и распаковка значимых типов в C# — доступный для программиста механизм преобразования размерных типов данных языка C# из значимых в ссылочные и обратно через задействование свойств фундаментального базового класса Object.
22.Для чего используется тип dynamic?
   Тип dynamic позволяет пропускать проверки типов во время компиляции операции, в которых он применяется . Вместо этого эти операции разрешаются во время выполнения. Тип dynamic упрощает доступ к API модели COM, например API автоматизации Office, к динамическим API, например библиотекам IronPython, и модели DOM HTML.
23.Что такое неявно типизированная переменная?
   Как правило, при объявлении переменной сначала указывается тип, например int или bool, а затем имя переменной. Но начиная с версии C# 3.0, компилятору предоставляется возможность самому определить тип локальной переменной, исходя из значения, которым она инициализируется. Такая переменная называется неявно типизированной.
24.Для чего используют Nullable тип?
   Значение null по умолчанию могут принимать только объекты ссылочных типов. Однако в различных ситуациях бывает удобно, чтобы объекты числовых типов данных имели значение null, то есть были бы не определены.
25. Как объявить строковый литерал?
   Строковый литерал – это последовательность символов, заключенная в кавычки.
26. Какие есть способы для задания и инициализации строк?
27. Какие методы есть у типа String?
   Compare: сравнивает две строки с учетом текущей культуры (локали) пользователя

CompareOrdinal: сравнивает две строки без учета локали

Contains: определяет, содержится ли подстрока в строке

Concat: соединяет строки

CopyTo: копирует часть строки или всю строку в другую строку

EndsWith: определяет, совпадает ли конец строки с подстрокой

Format: форматирует строку

IndexOf: находит индекс первого вхождения символа или подстроки в строке

Insert: вставляет в строку подстроку

Join: соединяет элементы массива строк

LastIndexOf: находит индекс последнего вхождения символа или подстроки в строке

Replace: замещает в строке символ или подстроку другим символом или подстрокой

Split: разделяет одну строку на массив строк

Substring: извлекает из строки подстроку, начиная с указанной позиции

ToLower: переводит все символы строки в нижний регистр

ToUpper: переводит все символы строки в верхний регистр

Trim: удаляет начальные и конечные пробелы из строки
28.  В чем отличие пустой и null строки?
   под null не выделяется помять, а путой выделяется паметь.
29. Как можно выполнить сравнение строк?
   В C# правильно сравнивать строки и через ==, и через Equals. Но более предпочтительным будет сравнивать через ==.
30.  В чем отличие типов String и StringBuilder?
   Основное отличие - StringBuilder можно изменять после создания.
31. Поясните явные преобразования переменных с помощью команд Convert.
32.. Как выполнить консольный ввод/вывод?
  Для вывода информации на консоль мы уже использовали встроенный метод Console.WriteLine.Кроме вывода информации на консоль мы можем получать информацию с консоли. Для этого предназначен метод Console.ReadLine().
33. Приведите примеры определения и инициализации одномерных и двумерных массивов?
   int[] nums2 = new int[4] { 1, 2, 3, 5 };
   
   int[] nums1 = new int[] { 0, 1, 2, 3, 4, 5 };
   int[,] nums2 = { { 0, 1, 2 }, { 3, 4, 5 } };
34. Что такое ступенчатый массив?
   Ступенчатый массив представляет собой массив массивов, в котором длина каждого массива может быть разной. Следовательно, ступенчатый массив может быть использован для составления таблицы из строк разной длины.
   тип [][] имя массива = new тип[размер] [];
35. Какие типы можно использовать в foreach?
   Массивы, коллекции. Классы в которых реализован интерфейс System.Collections.IEnumerable.
36. Что такое кортеж?
    Кортежи предоставляют удобный способ для работы с набором значений.Кортеж представляет набор значений, заключенных в круглые скобки.
    Кортежи могут передаваться в качестве параметров в метод, могут быть возвращаемым результатом функции, либо использоваться иным образом.
37. Что такое локальная функция?
   Локальные функции-это частные методы типа, вложенные в другой элемент. Они могут быть вызваны только от их содержащего члена. Локальные функции могут быть объявлены и вызваны из:

Методы, особенно методы итератора и асинхронные методы
Проектировщики
Методы доступа к свойствам
Методы доступа к событиям
Анонимный метод
Лямбда-выражение
Метод завершения
Другие локальные функции
Однако локальные функции не могут быть объявлены внутри элемента с выраженным телом.


